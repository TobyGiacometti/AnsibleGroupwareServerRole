#!/usr/bin/env bash

set -o errtrace
set -o pipefail
shopt -s globstar || exit

#---
# @stdout Help
print_help() {
	cat <<-EOF
		Lint the project's files.

		Usage:
		  $script_name
		  $script_name -h

		Options:
		  -h  Print help.
	EOF
}

script_name=$(basename "$0")
project_dir=$(cd "$(dirname "$0")/.." &>/dev/null && pwd) || exit
shebang_regex='^#!\s?/(usr/)?bin/(env\s+)?(sh|bash)$'
exit_status=0

while getopts :h option; do
	case $option in
		h)
			print_help
			exit
			;;
		\?)
			echo "Option is unknown: -$OPTARG" >&2
			exit 1
			;;
	esac
done

paths=("$project_dir"/**/*)
for path in "${paths[@]}"; do
	if [[ $path = $project_dir/molecule/* ]]; then
		continue
	elif [[ $path = $project_dir/files/* ]]; then
		continue
	elif [[ $path = $project_dir/templates/* ]]; then
		continue
	elif [[ ! -r $path ]]; then
		echo "Not readable: $path" >&2
		exit 1
	elif [[ ! -f $path ]]; then
		continue # We can ignore directories that were matched by globstar.
	elif [[ $path = *.sh ]]; then
		shellcheck_files+=("$path")
	elif [[ $path =~ \.ya?ml$ ]]; then
		yamllint_files+=("$path")
	elif [[ ${path##*/} != *.* ]] \
		&& read -r shebang <"$path" \
		&& [[ $shebang =~ $shebang_regex ]]; then
		if [[ ${BASH_REMATCH[3]} = bash || ${BASH_REMATCH[3]} = sh ]]; then
			shellcheck_files+=("$path")
		fi
	fi
done

shellcheck "${shellcheck_files[@]}" || exit_status=1
yamllint --strict \
	--config-file <(
		cat <<-EOF
			extends: default
			rules:
			  braces: disable
			  brackets: disable
			  colons: disable
			  commas: disable
			  comments: disable
			  comments-indentation: disable
			  document-start: disable
			  empty-lines: disable
			  empty-values: enable
			  hyphens: disable
			  indentation: disable
			  line-length: disable
			  new-line-at-end-of-file: disable
			  new-lines: disable
			  trailing-spaces: disable
		EOF
	) \
	"${yamllint_files[@]}" || exit_status=1
ansible-lint -x 201,203,204,206 "$project_dir" || exit_status=1

exit "$exit_status"
